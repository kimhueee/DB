#!/usr/bin/env python
# coding: utf-8

# In[14]:


import streamlit as st
import pandas as pd
import gspread
from oauth2client.service_account import ServiceAccountCredentials


# In[15]:


SPREADSHEET_ID = "1qsGHOEEQRlFAitOsQ3i-P9E5_sLpyi1nERMyySi5l7U"
SHEET_NAME = "Data"
CREDENTIALS_FILE = "famous-analyzer-458803-n6-b91983525854.json"

def load_data():
    scope = [
        "https://spreadsheets.google.com/feeds",
        "https://www.googleapis.com/auth/drive"
    ]
    creds_dict = json.loads(st.secrets["GOOGLE_CREDENTIALS"])
    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
    client = gspread.authorize(creds)
    sheet = client.open_by_key(SPREADSHEET_ID).worksheet(SHEET_NAME)
    data = sheet.get_all_records()
    df = pd.DataFrame(data)
    return df


# In[16]:


st.title("üìä Dashboard t·ª´ Google Sheet")

try:
    df = load_data()
    st.success("‚úÖ D·ªØ li·ªáu ƒë√£ t·∫£i th√†nh c√¥ng.")
    st.dataframe(df)

    if "PublishedDate" in df.columns and "Id" in df.columns:
        # Chuy·ªÉn c·ªôt ng√†y sang d·∫°ng datetime
        df["PublishedDate"] = pd.to_datetime(df["PublishedDate"])

        # ƒê·∫øm s·ªë l∆∞·ª£ng Id theo ng√†y
        df_count = df.groupby(df["PublishedDate"].dt.date)["Id"].count().reset_index()
        df_count.columns = ["Ng√†y", "S·ªë l∆∞·ª£ng"]

        # V·∫Ω bi·ªÉu ƒë·ªì
        st.line_chart(df_count.set_index("Ng√†y")["S·ªë l∆∞·ª£ng"])
    else:
        st.warning("Kh√¥ng c√≥ c·ªôt 'Published date' ho·∫∑c 'Id' ƒë·ªÉ hi·ªÉn th·ªã bi·ªÉu ƒë·ªì.")

except Exception as e:
    st.error(f"‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu: {e}")


# In[ ]:




